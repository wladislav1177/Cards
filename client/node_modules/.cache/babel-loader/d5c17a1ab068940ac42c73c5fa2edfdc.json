{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\n\nfunction useHttp() {\n  _s();\n\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Что-то пошло не так');\n      }\n\n      ;\n      return data;\n    } catch (e) {\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n  return request;\n}\n\n_s(useHttp, \"CTV3bIj5C2DjZ3g8HSl+c66hf3s=\");\n\nexport default useHttp;","map":{"version":3,"sources":["D:/GitHub/Cards/client/src/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","request","url","method","body","headers","response","fetch","data","json","ok","Error","message","e","setError"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;;AAEA,SAASC,OAAT,GAAoB;AAAA;;AAChB,QAAMC,OAAO,GAAGF,WAAW,CAAC,OAAOG,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAAI,GAAG,IAAnC,EAAyCC,OAAO,GAAG,EAAnD,KAA0D;AAClF,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,OAAN,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,qBAA1B,CAAN;AACH;;AAAA;AAED,aAAOJ,IAAP;AACH,KATD,CASE,OAAOK,CAAP,EAAU;AACRC,MAAAA,QAAQ,CAACD,CAAC,CAACD,OAAH,CAAR;AACA,YAAMC,CAAN;AACH;AACJ,GAd0B,EAcxB,EAdwB,CAA3B;AAgBA,SAAOZ,OAAP;AACH;;GAlBQD,O;;AAoBT,eAAeA,OAAf","sourcesContent":["import {useState, useCallback} from 'react';\r\n\r\nfunction useHttp () {\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Что-то пошло не так');\r\n            };\r\n\r\n            return data;\r\n        } catch (e) {\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    return request;\r\n}\r\n\r\nexport default useHttp;"]},"metadata":{},"sourceType":"module"}