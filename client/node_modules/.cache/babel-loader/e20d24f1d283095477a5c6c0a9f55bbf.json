{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\GitHub\\\\Cards\\\\client\\\\src\\\\pages\\\\HomePage.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // // Рендер карточек\n// function RenderCard() {\n//   // Запрос\n//   const search = window.location.search;\n//   let url = '';\n//   if (search === '') {\n//     url = `http://127.0.0.1:5000/?page=1`;\n//   } else {\n//     url = `http://127.0.0.1:5000/${search}`;\n//   }\n//   const [error, setError] = useState(null);\n//   const [isLoaded, setIsLoaded] = useState(false);\n//   const [items, setItems] = useState([]);\n//   useEffect(() => {\n//     fetch(url)\n//       .then(res => res.json())\n//       .then(\n//         (result) => {\n//           setIsLoaded(true);\n//           setItems(result);\n//         },\n//         (error) => {\n//           setIsLoaded(true);\n//           setError(error);\n//         }\n//       )\n//   }, [])\n//   // Рендер\n//   if (error) {\n//     return <div>Ошибка: {error.message}</div>;\n//   } else if (!isLoaded) {\n//     return <div>Загрузка...</div>;\n//   } else {\n//     return (\n//       <table className=\"table-cards\">\n//         {items.map(item => (\n//           <td className=\"td-cards\">\n//             <div className=\"card-block\" id={item.id.$oid} onClick={ClickOnCard}>\n//               <div className=\"avatar\">\n//                 <img className=\"avatar-img\" id={item.id.$oid} src={item.avatar} alt=\"avatar\"></img>\n//               </div>\n//               <p className=\"first-name\" id={item.id.$oid} >{item.first_name}</p>\n//               <p className=\"last-name\" id={item.id.$oid} >{item.last_name}</p>\n//             </div>\n//           </td>\n//         ))}\n//       </table>\n//     );\n//   }\n// }\n// // Нажатие на карточку\n// function ClickOnCard(e) {\n//   const personID = e.target.id;\n//   const url = `/card/${personID}`;\n//   window.location.href = url;\n// }\n// Кнопка вперёд\n// function NextPage() {\n//   const search = window.location.search;\n// }\n// Рендер главной страницы\n\nfunction HomePage() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // Pagination\n  const [pageNumber, setPageNumber] = useState(0);\n  const [numberOfPages, setNumberOfPages] = useState(0);\n  const [posts, setPosts] = useState([]);\n  const pages = new Array(numberOfPages).fill(null).map((v, i) => i);\n\n  const gotoPrevious = () => {\n    setPageNumber(Math.max(0, pageNumber - 1));\n  };\n\n  const gotoNext = () => {\n    setPageNumber(Math.min(numberOfPages - 1, pageNumber + 1));\n  }; /////////////////////////////////////////////////////////////////////////////////\n  // Рендер карточек\n\n\n  function RenderCard() {\n    _s();\n\n    // Запрос\n    const search = window.location.search;\n    let url = '';\n\n    if (search === '') {\n      url = `http://127.0.0.1:5000/?page=1`;\n    } else {\n      url = `http://127.0.0.1:5000/${search}`;\n    }\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    useEffect(() => {\n      fetch(url).then(res => res.json()).then(result => {\n        setIsLoaded(true);\n        setItems(result);\n      }, error => {\n        setIsLoaded(true);\n        setError(error);\n      });\n    }, []); // Рендер\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-cards\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"td-cards\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-block\",\n            id: item.id.$oid,\n            onClick: ClickOnCard,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"avatar-img\",\n                id: item.id.$oid,\n                src: item.avatar,\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"first-name\",\n              id: item.id.$oid,\n              children: item.first_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"last-name\",\n              id: item.id.$oid,\n              children: item.last_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this);\n    }\n  } // Нажатие на карточку\n\n\n  _s(RenderCard, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n  function ClickOnCard(e) {\n    const personID = e.target.id;\n    const url = `/card/${personID}`;\n    window.location.href = url;\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previous-page\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-previous-page\",\n          onClick: gotoPrevious,\n          children: \"\\uD83E\\uDC14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: /*#__PURE__*/_jsxDEV(RenderCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"next-page\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-next-page\",\n          onClick: gotoNext,\n          children: \"\\uD83E\\uDC16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(HomePage, \"MkexGP6NKgBiEEeSFxx7RmBX8Io=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["D:/GitHub/Cards/client/src/pages/HomePage.js"],"names":["React","useState","useEffect","HomePage","pageNumber","setPageNumber","numberOfPages","setNumberOfPages","posts","setPosts","pages","Array","fill","map","v","i","gotoPrevious","Math","max","gotoNext","min","RenderCard","search","window","location","url","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","message","item","id","$oid","ClickOnCard","avatar","first_name","last_name","e","personID","target","href"],"mappings":"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","sourcesContent":["import React, { useState,  useEffect } from 'react';\r\n\r\n// // Рендер карточек\r\n// function RenderCard() {\r\n\r\n//   // Запрос\r\n//   const search = window.location.search;\r\n//   let url = '';\r\n\r\n//   if (search === '') {\r\n//     url = `http://127.0.0.1:5000/?page=1`;\r\n//   } else {\r\n//     url = `http://127.0.0.1:5000/${search}`;\r\n//   }\r\n\r\n//   const [error, setError] = useState(null);\r\n//   const [isLoaded, setIsLoaded] = useState(false);\r\n//   const [items, setItems] = useState([]);\r\n  \r\n//   useEffect(() => {\r\n//     fetch(url)\r\n//       .then(res => res.json())\r\n//       .then(\r\n//         (result) => {\r\n//           setIsLoaded(true);\r\n//           setItems(result);\r\n//         },\r\n//         (error) => {\r\n//           setIsLoaded(true);\r\n//           setError(error);\r\n//         }\r\n//       )\r\n//   }, [])\r\n\r\n//   // Рендер\r\n//   if (error) {\r\n//     return <div>Ошибка: {error.message}</div>;\r\n//   } else if (!isLoaded) {\r\n//     return <div>Загрузка...</div>;\r\n//   } else {\r\n//     return (\r\n//       <table className=\"table-cards\">\r\n//         {items.map(item => (\r\n//           <td className=\"td-cards\">\r\n//             <div className=\"card-block\" id={item.id.$oid} onClick={ClickOnCard}>\r\n//               <div className=\"avatar\">\r\n//                 <img className=\"avatar-img\" id={item.id.$oid} src={item.avatar} alt=\"avatar\"></img>\r\n//               </div>\r\n//               <p className=\"first-name\" id={item.id.$oid} >{item.first_name}</p>\r\n//               <p className=\"last-name\" id={item.id.$oid} >{item.last_name}</p>\r\n//             </div>\r\n//           </td>\r\n//         ))}\r\n//       </table>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// // Нажатие на карточку\r\n// function ClickOnCard(e) {\r\n//   const personID = e.target.id;\r\n//   const url = `/card/${personID}`;\r\n//   window.location.href = url;\r\n// }\r\n\r\n\r\n// Кнопка вперёд\r\n// function NextPage() {\r\n//   const search = window.location.search;\r\n// }\r\n\r\n\r\n// Рендер главной страницы\r\nfunction HomePage() {\r\n  \r\n  // Pagination\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [numberOfPages, setNumberOfPages] = useState(0);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const pages = new Array(numberOfPages).fill(null).map((v, i) => i);\r\n\r\n  const gotoPrevious = () => {\r\n    setPageNumber(Math.max(0, pageNumber - 1));\r\n  };\r\n\r\n  const gotoNext = () => {\r\n    setPageNumber(Math.min(numberOfPages - 1, pageNumber + 1));\r\n  };\r\n\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////\r\n\r\n  // Рендер карточек\r\n  function RenderCard() {\r\n\r\n    // Запрос\r\n    const search = window.location.search;\r\n    let url = '';\r\n\r\n    if (search === '') {\r\n      url = `http://127.0.0.1:5000/?page=1`;\r\n    } else {\r\n      url = `http://127.0.0.1:5000/${search}`;\r\n    }\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    \r\n    useEffect(() => {\r\n      fetch(url)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            setIsLoaded(true);\r\n            setItems(result);\r\n          },\r\n          (error) => {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n          }\r\n        )\r\n    }, [])\r\n\r\n    // Рендер\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Загрузка...</div>;\r\n    } else {\r\n      return (\r\n        <table className=\"table-cards\">\r\n          {items.map(item => (\r\n            <td className=\"td-cards\">\r\n              <div className=\"card-block\" id={item.id.$oid} onClick={ClickOnCard}>\r\n                <div className=\"avatar\">\r\n                  <img className=\"avatar-img\" id={item.id.$oid} src={item.avatar} alt=\"avatar\"></img>\r\n                </div>\r\n                <p className=\"first-name\" id={item.id.$oid} >{item.first_name}</p>\r\n                <p className=\"last-name\" id={item.id.$oid} >{item.last_name}</p>\r\n              </div>\r\n            </td>\r\n          ))}\r\n        </table>\r\n      );\r\n    }\r\n  }\r\n\r\n  // Нажатие на карточку\r\n  function ClickOnCard(e) {\r\n    const personID = e.target.id;\r\n    const url = `/card/${personID}`;\r\n    window.location.href = url;\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <h1>Карточки</h1>\r\n      </div>\r\n  \r\n      <div className=\"container\">\r\n        <div className=\"previous-page\">\r\n          <button className=\"btn-previous-page\" onClick={gotoPrevious}>&#129044;</button>\r\n        </div>\r\n  \r\n        <div className=\"cards\">\r\n          <RenderCard />\r\n        </div>\r\n  \r\n        <div className=\"next-page\">\r\n          <button className=\"btn-next-page\" onClick={gotoNext}>&#129046;</button>\r\n        </div>\r\n      </div>    \r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}